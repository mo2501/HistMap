<?php

namespace HistoryBundle\Repository;

/**
 * suggestionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class suggestionRepository extends \Doctrine\ORM\EntityRepository{

    public function makeCall($url) {
        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL, $url);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        $return = curl_exec($curl);
        return $return;
    }

    public function wikipediaImageUrls($url) {
        $imageUrls = array();
        $pathComponents = explode('/', parse_url($url, PHP_URL_PATH));
        $pageTitle = array_pop($pathComponents);
        $imagesQuery = "https://fr.wikipedia.org/w/api.php?action=query&titles={$pageTitle}&prop=images&format=json";
        $jsonResponse = $this->makeCall($imagesQuery);
        $response = json_decode($jsonResponse, true);
        $imagesKey = key($response['query']['pages']);

        if(isset($response['query']['pages'][$imagesKey]['images'])) {
            for($i = 0; $i <= 5; $i++){
                $imageArray = $response['query']['pages'][$imagesKey]['images'][$i];

                if ($imageArray['title'] != 'File:Commons-logo.svg' && $imageArray['title'] != 'File:P vip.svg') {
                    $title = str_replace('Fichier:', '', $imageArray['title']);
                    $title = str_replace(' ', '_', $title);
                    $title = str_replace("&", "%26", $title);

                    $imageUrlQuery = "https://commons.wikimedia.org/w/api.php?format=json&action=query&prop=imageinfo&iiprop=url&titles=File:{$title}";

                    $jsonUrlQuery = $this->makeCall($imageUrlQuery);

                    $urlResponse = json_decode($jsonUrlQuery, true);

                    $imageKey = key($urlResponse['query']['pages']);

                    $imageUrls[] = $urlResponse['query']['pages'][$imageKey]['imageinfo'][0]['url'];
                }
            }
        }
        return $imageUrls;
    }

}
