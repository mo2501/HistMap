<?php

namespace HistoryBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * histlinkSuggestion
 *
 * @ORM\Table(name="histlink_suggestion")
 * @ORM\Entity(repositoryClass="HistoryBundle\Repository\histlinkSuggestionRepository")
 */
class histlinkSuggestion
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="from_person", type="string", length=255)
     * @Assert\NotBlank(message="Le nom de la personnalité 1 ne doit pas être vide.")
     * @Assert\Regex(
     *     pattern="/^[a-zA-Z0-9 \-ÀÁÂÃÄÅàáâãäåÒÓÔÕÖØòóôõöøÈÉÊËèéêëÇçÌÍÎÏìíîïÙÚÛÜùúûüÿÑñ]*$/",
     *     match=true,
     *     message="Le nom de la personnalité 1 est incorrect."
     * )
     */
    private $from_person;

    /**
     * @var string
     *
     * @ORM\Column(name="to_person", type="string", length=255)
     * @Assert\NotBlank(message="Le nom de la personnalité 2 ne doit pas être vide.")
     * @Assert\Regex(
     *     pattern="/^[a-zA-Z0-9 \-ÀÁÂÃÄÅàáâãäåÒÓÔÕÖØòóôõöøÈÉÊËèéêëÇçÌÍÎÏìíîïÙÚÛÜùúûüÿÑñ]*$/",
     *     match=true,
     *     message="Le nom de la personnalité 2 est incorrect."
     * )
     */
    private $to_person;

    /**
     * @var string
     * @Assert\NotBlank(message="Le lien ne doit pas être vide.")
     * @Assert\Regex(
     *     pattern="/^[a-zA-Z0-9 \-ÀÁÂÃÄÅàáâãäåÒÓÔÕÖØòóôõöøÈÉÊËèéêëÇçÌÍÎÏìíîïÙÚÛÜùúûüÿÑñ]*$/",
     *     match=true,
     *     message="Le lien est incorrect."
     * )
     *
     * @ORM\Column(name="link", type="string", length=255)
     */
    private $link;


    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set from
     *
     * @param string $from
     *
     * @return histlinkSuggestion
     */
    public function setFrom($from)
    {
        $this->from = $from;

        return $this;
    }

    /**
     * Get from
     *
     * @return string
     */
    public function getFrom()
    {
        return $this->from;
    }

    /**
     * Set to
     *
     * @param string $to
     *
     * @return histlinkSuggestion
     */
    public function setTo($to)
    {
        $this->to = $to;

        return $this;
    }

    /**
     * Get to
     *
     * @return string
     */
    public function getTo()
    {
        return $this->to;
    }

    /**
     * Set link
     *
     * @param string $link
     *
     * @return histlinkSuggestion
     */
    public function setLink($link)
    {
        $this->link = $link;

        return $this;
    }

    /**
     * Get link
     *
     * @return string
     */
    public function getLink()
    {
        return $this->link;
    }

    /**
     * Set fromPerson
     *
     * @param string $fromPerson
     *
     * @return histlinkSuggestion
     */
    public function setFromPerson($fromPerson)
    {
        $this->from_person = $fromPerson;

        return $this;
    }

    /**
     * Get fromPerson
     *
     * @return string
     */
    public function getFromPerson()
    {
        return $this->from_person;
    }
}
